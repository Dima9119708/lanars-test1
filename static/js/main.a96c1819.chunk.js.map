{"version":3,"sources":["store/reducer.js","component/Card.js","utils/index.js","component/Wrapper.js","store/index.js","index.js"],"names":["clicked","noClicked","clickedAction","payload","type","defaultState","nums","numsPairs","clickedStatus","start","Card","num","useState","toggleClass","setToggle","useSelector","dispatch","useDispatch","useEffect","includes","onClick","numsPairsPushAction","className","isPrime","i","random","Math","floor","Wrapper","numbers","setNumbers","randAdd","reduce","acc","val","idx","length","mixing","concat","getCouples","randomNumbers","generateRand","randIdx","push","getRandNumbers","Array","fill","map","_","filter","genIsPrime","debounce","value","store","createStore","state","action","Object","assign","count","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a96c1819.chunk.js","sourcesContent":["export const clicked = 'clicked'\r\nexport const noClicked = 'noClicked'\r\n\r\nexport const numsPushAction = (payload) => ({ type: 'nums/push', payload})\r\nexport const numsPairsPushAction = (payload) => ({ type: 'numPairs/push', payload})\r\nexport const numsClearAction = () => ({ type: 'nums/clear'})\r\nexport const clickedAction = (payload) => ({ type: 'clickedStatus', payload})\r\nexport const startAction = (payload) => ({ type: 'start', payload})\r\n\r\nconst defaultState = {\r\n    nums: [],\r\n    numsPairs: [],\r\n    clickedStatus: noClicked,\r\n    start: false,\r\n}\r\n\r\nexport function reducer(state = defaultState, action) {\r\n\r\n    switch(action.type) {\r\n\r\n        case 'start': {\r\n            let { start } = state\r\n\r\n            start = true\r\n\r\n            return Object.assign(state, { start })\r\n        }\r\n\r\n        case 'nums/push': {\r\n            const { nums, numsPairs } = state\r\n\r\n            if (!numsPairs.includes(action.payload)) {\r\n                nums.push(action.payload)\r\n            }\r\n\r\n            return Object.assign(state, { nums })\r\n        }\r\n\r\n        case 'numPairs/push': {\r\n            const { numsPairs, nums } = state\r\n\r\n            const count = nums.reduce((acc, val) => {\r\n                if (val === action.payload) {\r\n                    acc++\r\n                }\r\n                return acc\r\n            }, 0)\r\n\r\n            if (count === 2) {\r\n                numsPairs.push(action.payload)\r\n            }\r\n\r\n            return Object.assign(state, { numsPairs })\r\n        }\r\n\r\n        case 'nums/clear': {\r\n            const { nums } = state\r\n\r\n            nums.length = 0\r\n\r\n            return Object.assign(state, { nums })\r\n        }\r\n\r\n        case 'clickedStatus': {\r\n            let { clickedStatus } = state\r\n\r\n            clickedStatus = action.payload\r\n\r\n            return Object.assign(state, { clickedStatus })\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {clicked, clickedAction, noClicked, numsPairsPushAction, numsPushAction} from \"../store/reducer\";\r\n\r\nconst Card = ({ num }) => {\r\n    const [toggleClass, setToggle] = useState('')\r\n    const numsPairs = useSelector( ({ numsPairs }) => numsPairs )\r\n    const clickedStatus = useSelector( ({ clickedStatus }) => clickedStatus )\r\n    const start = useSelector( ({ start }) => start )\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (clickedStatus === noClicked) {\r\n            if (numsPairs.includes(num) && start) {\r\n                setToggle('enable')\r\n            }\r\n            else if (!numsPairs.includes(num) && start) {\r\n               setToggle('disable')\r\n            }\r\n        }\r\n    }, [clickedStatus, start])\r\n\r\n    const listenerClick = () => {\r\n        setToggle('enable')\r\n\r\n        if (clickedStatus === noClicked) {\r\n            dispatch(clickedAction(clicked))\r\n        }\r\n\r\n        dispatch(numsPushAction(num))\r\n        dispatch(numsPairsPushAction(num))\r\n    }\r\n\r\n    return (\r\n        <div onClick={start ? listenerClick : null} className=\"game__card\">\r\n            <div className={`game__opacity ${toggleClass}`}/>\r\n            { num }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;","const isPrime = num => {\r\n    for(let i = 2; i < num; i++) {\r\n        if(num % i === 0) return false;\r\n    }\r\n\r\n    return num;\r\n}\r\n\r\nconst random = num => Math.floor(Math.random() * num)\r\n\r\nexport function genIsPrime(length = 99) {\r\n    return Array(length)\r\n                .fill(null)\r\n                .map((_, i) => isPrime(i + 2))\r\n                .filter(val => val)\r\n}\r\n\r\nexport function getRandNumbers(numbers, length = 15) {\r\n    const randomNumbers = []\r\n\r\n    generateRand()\r\n\r\n    function generateRand(start = 0) {\r\n        for (let i = start; i < length; i++) {\r\n            const randIdx = random(numbers.length)\r\n            const num = numbers[randIdx]\r\n\r\n            if (randomNumbers.includes(numbers[randIdx])) {\r\n                generateRand(i)\r\n                return false\r\n            }\r\n\r\n            randomNumbers.push(num)\r\n        }\r\n    }\r\n\r\n    return randomNumbers\r\n}\r\n\r\nexport function getCouples(numbers) {\r\n    return numbers.concat(numbers)\r\n}\r\n\r\nexport function mixing(numbers) {\r\n    const randAdd = ['push', 'unshift']\r\n\r\n    return numbers.reduce((acc, val) => {\r\n        const idx = random(randAdd.length)\r\n        const method = randAdd[idx]\r\n\r\n        acc[method](val)\r\n\r\n        return acc\r\n    }, [])\r\n}","import Card from \"./Card\";\r\nimport {genIsPrime, getCouples, getRandNumbers, mixing} from \"../utils\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {debounce} from \"lodash\";\r\nimport {clicked, clickedAction, noClicked, numsClearAction, startAction} from \"../store/reducer\";\r\n\r\nfunction Wrapper() {\r\n    const [numbers, setNumbers] = useState([])\r\n    const clickedStatus = useSelector( ({ clickedStatus }) => clickedStatus )\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        setNumbers(mixing(getCouples(getRandNumbers(genIsPrime()))))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        debounce(() => {\r\n            dispatch(startAction(true))\r\n        }, 5000, {})()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (clickedStatus === clicked) {\r\n            debounce(() => {\r\n                dispatch(clickedAction(noClicked))\r\n                dispatch(numsClearAction())\r\n            }, 1000)()\r\n        }\r\n    }, [clickedStatus])\r\n\r\n    return (\r\n        <div className=\"game\">\r\n          <span className=\"game__title\">\r\n              Mahjong-like game\r\n          </span>\r\n          <div className=\"game__field\">\r\n              {\r\n                  numbers.map( (value, idx) =>\r\n                      <Card key={idx} num={value} />\r\n                  )\r\n              }\r\n          </div>\r\n\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Wrapper;\r\n","import { createStore } from 'redux'\r\nimport {reducer} from \"./reducer\";\r\n\r\nexport const store = createStore(reducer)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport './index.scss';\r\nimport Wrapper from './component/Wrapper';\r\nimport { store } from \"./store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n          <Wrapper />\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}