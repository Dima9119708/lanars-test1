{"version":3,"sources":["store/reducer.js","component/Card.js","utils/index.js","component/Wrapper.js","store/index.js","index.js"],"names":["clicked","noClicked","clickedAction","payload","type","prevIdxAction","defaultState","nums","numsPairs","clickedStatus","start","prevIdx","Card","num","idx","useState","toggleClass","setToggle","useSelector","dispatch","useDispatch","useEffect","includes","onClick","numsPairsPushAction","className","isPrime","i","random","Math","floor","Wrapper","numbers","setNumbers","randAdd","reduce","acc","val","length","mixing","concat","getCouples","randomNumbers","generateRand","randIdx","push","getRandNumbers","Array","fill","map","_","filter","genIsPrime","debounce","value","store","createStore","state","action","Object","assign","count","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42f5f071.chunk.js","sourcesContent":["export const clicked = 'clicked'\r\nexport const noClicked = 'noClicked'\r\n\r\nexport const numsPushAction = (payload) => ({ type: 'nums/push', payload})\r\nexport const numsPairsPushAction = (payload) => ({ type: 'numPairs/push', payload})\r\nexport const numsClearAction = () => ({ type: 'nums/clear'})\r\nexport const clickedAction = (payload) => ({ type: 'clickedStatus', payload})\r\nexport const startAction = (payload) => ({ type: 'start', payload})\r\nexport const prevIdxAction = (payload) => ({ type: 'prevIdx', payload})\r\n\r\nconst defaultState = {\r\n    nums: [],\r\n    numsPairs: [],\r\n    clickedStatus: noClicked,\r\n    start: false,\r\n    prevIdx: null,\r\n}\r\n\r\nexport function reducer(state = defaultState, action) {\r\n\r\n    switch(action.type) {\r\n\r\n        case 'prevIdx': {\r\n            let { prevIdx } = state\r\n\r\n            prevIdx = action.payload\r\n\r\n            return Object.assign(state, { prevIdx })\r\n        }\r\n\r\n        case 'start': {\r\n            let { start } = state\r\n\r\n            start = true\r\n\r\n            return Object.assign(state, { start })\r\n        }\r\n\r\n        case 'nums/push': {\r\n            const { nums, numsPairs } = state\r\n\r\n            if (!numsPairs.includes(action.payload)) {\r\n                nums.push(action.payload)\r\n            }\r\n\r\n            return Object.assign(state, { nums })\r\n        }\r\n\r\n        case 'numPairs/push': {\r\n            const { numsPairs, nums } = state\r\n\r\n            const count = nums.reduce((acc, val) => {\r\n                if (val === action.payload) {\r\n                    acc++\r\n                }\r\n                return acc\r\n            }, 0)\r\n\r\n            if (count === 2) {\r\n                numsPairs.push(action.payload)\r\n            }\r\n\r\n            return Object.assign(state, { numsPairs })\r\n        }\r\n\r\n        case 'nums/clear': {\r\n            const { nums } = state\r\n\r\n            nums.length = 0\r\n\r\n            return Object.assign(state, { nums })\r\n        }\r\n\r\n        case 'clickedStatus': {\r\n            let { clickedStatus } = state\r\n\r\n            clickedStatus = action.payload\r\n\r\n            return Object.assign(state, { clickedStatus })\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {clicked, clickedAction, noClicked, numsPairsPushAction, numsPushAction, prevIdxAction} from \"../store/reducer\";\r\n\r\nconst Card = ({ num, idx }) => {\r\n    const [toggleClass, setToggle] = useState('')\r\n    const numsPairs = useSelector( ({ numsPairs }) => numsPairs )\r\n    const clickedStatus = useSelector( ({ clickedStatus }) => clickedStatus )\r\n    const start = useSelector( ({ start }) => start )\r\n    const prevIdx = useSelector( ({ prevIdx }) => prevIdx )\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (clickedStatus === noClicked) {\r\n            if (numsPairs.includes(num) && start) {\r\n                setToggle('enable')\r\n            }\r\n            else if (!numsPairs.includes(num) && start) {\r\n               setToggle('disable')\r\n            }\r\n        }\r\n    }, [clickedStatus, start])\r\n\r\n    const listenerClick = () => {\r\n        if (idx === prevIdx) {\r\n            return false\r\n        }\r\n\r\n        setToggle('enable')\r\n\r\n        if (clickedStatus === noClicked) {\r\n            dispatch(clickedAction(clicked))\r\n        }\r\n\r\n        dispatch(numsPushAction(num))\r\n        dispatch(numsPairsPushAction(num))\r\n        dispatch(prevIdxAction(idx))\r\n    }\r\n\r\n    return (\r\n        <div onClick={start ? listenerClick : null} className=\"game__card\">\r\n            <div className={`game__opacity ${toggleClass}`}/>\r\n            { num }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;","const isPrime = num => {\r\n    for(let i = 2; i < num; i++) {\r\n        if(num % i === 0) return false;\r\n    }\r\n\r\n    return num;\r\n}\r\n\r\nconst random = num => Math.floor(Math.random() * num)\r\n\r\nexport function genIsPrime(length = 50) {\r\n    return Array(length)\r\n                .fill(null)\r\n                .map((_, i) => isPrime(i + 2))\r\n                .filter(val => val)\r\n}\r\n\r\nexport function getRandNumbers(numbers, length = 15) {\r\n    const randomNumbers = []\r\n\r\n    generateRand()\r\n\r\n    function generateRand(start = 0) {\r\n        for (let i = start; i < length; i++) {\r\n            const randIdx = random(numbers.length)\r\n            const num = numbers[randIdx]\r\n\r\n            if (randomNumbers.includes(numbers[randIdx])) {\r\n                generateRand(i)\r\n                return false\r\n            }\r\n\r\n            randomNumbers.push(num)\r\n        }\r\n    }\r\n\r\n    return randomNumbers\r\n}\r\n\r\nexport function getCouples(numbers) {\r\n    return numbers.concat(numbers)\r\n}\r\n\r\nexport function mixing(numbers) {\r\n    const randAdd = ['push', 'unshift']\r\n\r\n    return numbers.reduce((acc, val) => {\r\n        const idx = random(randAdd.length)\r\n        const method = randAdd[idx]\r\n\r\n        acc[method](val)\r\n\r\n        return acc\r\n    }, [])\r\n}","import Card from \"./Card\";\r\nimport {genIsPrime, getCouples, getRandNumbers, mixing} from \"../utils\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {debounce} from \"lodash\";\r\nimport {clicked, clickedAction, noClicked, numsClearAction, prevIdxAction, startAction} from \"../store/reducer\";\r\n\r\nfunction Wrapper() {\r\n    const [numbers, setNumbers] = useState([])\r\n    const clickedStatus = useSelector( ({ clickedStatus }) => clickedStatus )\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        setNumbers(mixing(getCouples(getRandNumbers(genIsPrime()))))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        debounce(() => {\r\n            dispatch(startAction(true))\r\n        }, 5000, {})()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (clickedStatus === clicked) {\r\n            debounce(() => {\r\n                dispatch(clickedAction(noClicked))\r\n                dispatch(numsClearAction())\r\n                dispatch(prevIdxAction(null))\r\n            }, 2000)()\r\n        }\r\n    }, [clickedStatus])\r\n\r\n    return (\r\n        <div className=\"game\">\r\n          <span className=\"game__title\">\r\n              Mahjong-like game\r\n          </span>\r\n          <div className=\"game__field\">\r\n              {\r\n                  numbers.map( (value, idx) =>\r\n                      <Card key={idx} num={value} idx={idx} />\r\n                  )\r\n              }\r\n          </div>\r\n\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Wrapper;\r\n","import { createStore } from 'redux'\r\nimport {reducer} from \"./reducer\";\r\n\r\nexport const store = createStore(reducer)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport './index.scss';\r\nimport Wrapper from './component/Wrapper';\r\nimport { store } from \"./store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n          <Wrapper />\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}